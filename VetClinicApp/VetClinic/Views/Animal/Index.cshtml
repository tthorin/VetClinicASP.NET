@model X.PagedList.IPagedList<VetClinic.Models.AnimalViewModel>

@{
    ViewData["Title"] = "Animals";
    var currentFilter = ViewData["CurrentFilter"] != null?ViewData["CurrentFilter"] as string:"";
}
<h1>Animal List</h1>

<div class="container-fluid">
    <div class="row">
        <div class="col">
        </div>
        <div class="col">
            <form asp-action="Index" method="get">
                <div class="input-group">
                    <label class="form-label col-form-label" for="SearchString">Search for animal:</label>
                    <input class="form-control me-2" id="SearchString" name="SearchString" type="text" value="@currentFilter" aria-label="Search"/>
                    <input class="btn btn-outline-primary btn-sm" type="submit" value="Search"/>
                </div>
            </form>
        </div>
    </div>
</div>


<table class="table table-hover">
    <thead>
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new {sortOrder = ViewData["NameSortParam"], currentFilter = ViewData["CurrentFilter"] as string})
        </th>
        <th>
            @Html.DisplayNameFor(x => x.FirstOrDefault().Race)
        </th>
        <th>
            @Html.DisplayNameFor(x => x.FirstOrDefault().Gender)
        </th>
        <th>
            @Html.DisplayNameFor(x => x.FirstOrDefault().Birthdate)
        </th>
    </tr>
    </thead>
    <tbody>
    @if (Model != null)
    {   
        foreach (var item in Model)
        {
            <tr class="table-secondary">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Race)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birthdate)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">Details</a>
                </td>
            </tr>
        }
    }
    </tbody>
</table>
<br/>
Page @(Model?.PageCount < Model?.PageNumber ? 0 : Model?.PageNumber) of @Model?.PageCount
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-end pagination-sm">
        @{
            if (Model?.PageCount > 1)
            {
                if (Model.PageNumber == 1)
                {
                    <li class="page-item disabled">
                        <a class="page-link">First</a>
                    </li>
                    <li class="page-item disabled">
                        <a class="page-link">&laquo;</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="index" asp-route-page="1" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First</a>
                    </li>
                    <li class="page-item">
                        @{ int prev = @Model.PageNumber - 1; }
                        <a class="page-link" asp-action="index" asp-route-page="@prev" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">&laquo;</a>
                    </li>
                }
                int showTenPagesEnd = Model.PageNumber + 3 > Model.PageCount ? Model.PageCount : Model.PageNumber + 3;
                int showTenPagesStart = Model.PageNumber - 3 < 1 ? 1 : Model.PageNumber - 3;
                for (int i = showTenPagesStart; i <= showTenPagesEnd; i++)
                {
                    if (Model.PageNumber == i)
                    {
                        <li class="page-item active">
                            <a class="page-link" asp-action="index" asp-route-page="@i" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="index" asp-route-page="@i" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                        </li>
                    }
                }
                if (Model.PageNumber == Model.PageCount)
                {
                    <li class="page-item disabled">
                        <a class="page-link">&raquo;</a>
                    </li>
                    <li class="page-item disabled">
                        <a class="page-link">Last</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        @{ int next = @Model.PageNumber + 1; }
                        <a class="page-link" asp-action="index" asp-route-page="@next" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">&raquo;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-action="index" asp-route-page="@Model.PageCount" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last</a>
                    </li>
                }
            }
        }
    </ul>
</nav>
